"""
Script para demonstra√ß√£o do sistema de an√°lise PDI.
"""
import sys
from pathlib import Path

# Adiciona o diret√≥rio da aplica√ß√£o ao path
sys.path.append(str(Path(__file__).parent.parent))

from app import PDIAnalyzer
import pandas as pd


def demo_text_analysis():
    """Demonstra an√°lise de texto."""
    print("=== DEMONSTRA√á√ÉO: AN√ÅLISE DE TEXTO ===\n")
    
    analyzer = PDIAnalyzer()
    
    # Exemplos de PDIs com diferentes n√≠veis de qualidade
    examples = [
        {
            "nome": "PDI Alta Qualidade",
            "objetivo": "Desenvolver compet√™ncias avan√ßadas em gest√£o de projetos √°geis com foco em Scrum e Kanban",
            "acoes": "Completar certifica√ß√£o PSM I at√© mar√ßo de 2024, aplicar metodologia em 3 projetos piloto e liderar equipe de 5 pessoas"
        },
        {
            "nome": "PDI M√©dia Qualidade", 
            "objetivo": "Melhorar habilidades de lideran√ßa e comunica√ß√£o",
            "acoes": "Fazer curso de lideran√ßa e praticar apresenta√ß√µes"
        },
        {
            "nome": "PDI Baixa Qualidade",
            "objetivo": "Crescer profissionalmente",
            "acoes": "Estudar mais"
        }
    ]
    
    for example in examples:
        print(f"üìã {example['nome']}")
        print(f"Objetivo: {example['objetivo']}")
        print(f"A√ß√µes: {example['acoes']}")
        
        result = analyzer.analyze_text(example['objetivo'], example['acoes'])
        
        print(f"üìä Resultado:")
        print(f"   Score Geral: {result['overall_score']:.2f}")
        print(f"   N√≠vel: {result['quality_level']}")
        print(f"   Clareza: {result['clarity_score']:.2f}")
        print(f"   Especificidade: {result['specificity_score']:.2f}")
        print(f"   Completude: {result['completeness_score']:.2f}")
        print("-" * 60)


def demo_csv_analysis():
    """Demonstra an√°lise de arquivo CSV."""
    print("\n=== DEMONSTRA√á√ÉO: AN√ÅLISE DE ARQUIVO CSV ===\n")
    
    # Procura por arquivos CSV no diret√≥rio examples
    csv_files = list(Path("examples").glob("*.csv"))
    
    if csv_files:
        csv_file = csv_files[0]
        print(f"üìÅ Analisando arquivo: {csv_file.name}")
        
        analyzer = PDIAnalyzer()
        try:
            result = analyzer.analyze_file(str(csv_file))
            
            if result['success']:
                print(f"‚úÖ An√°lise conclu√≠da com sucesso!")
                print(f"üìä Total de PDIs analisados: {result['total_analyzed']}")
                print(f"   Alta qualidade: {result['summary']['Alta']}")
                print(f"   M√©dia qualidade: {result['summary']['M√©dia']}")
                print(f"   Baixa qualidade: {result['summary']['Baixa']}")
                
                # Mostra alguns exemplos
                df = result['detailed_results']
                print(f"\nüìã Primeiros 3 resultados:")
                for idx, row in df.head(3).iterrows():
                    print(f"   PDI {idx+1}: {row['quality_level']} ({row['overall_score']:.2f})")
            else:
                print(f"‚ùå Erro na an√°lise: {result['error']}")
                
        except Exception as e:
            print(f"‚ùå Erro: {e}")
    else:
        print("üìÅ Nenhum arquivo CSV encontrado no diret√≥rio examples/")
        print("   Criando exemplo para demonstra√ß√£o...")
        
        # Cria exemplo de CSV
        sample_data = {
            'objetivo': [
                'Desenvolver compet√™ncias em an√°lise de dados com Python e SQL',
                'Melhorar comunica√ß√£o',
                'Liderar projetos de transforma√ß√£o digital at√© 2024'
            ],
            'acoes': [
                'Completar curso de 60h em Data Science, aplicar em 2 projetos reais',
                'Fazer apresenta√ß√µes',
                'Gerenciar 3 projetos piloto e capacitar equipe de 10 pessoas'
            ]
        }
        
        example_path = Path("examples/exemplo_pdi.csv")
        example_path.parent.mkdir(exist_ok=True)
        
        df = pd.DataFrame(sample_data)
        df.to_csv(example_path, index=False, encoding='utf-8')
        
        print(f"‚úÖ Arquivo exemplo criado: {example_path}")
        
        # Analisa o exemplo criado
        analyzer = PDIAnalyzer()
        result = analyzer.analyze_file(str(example_path))
        
        if result['success']:
            print(f"\nüìä Resultados da an√°lise:")
            print(f"   Total: {result['total_analyzed']}")
            print(f"   Alta: {result['summary']['Alta']}")
            print(f"   M√©dia: {result['summary']['M√©dia']}")
            print(f"   Baixa: {result['summary']['Baixa']}")


def main():
    """Fun√ß√£o principal da demonstra√ß√£o."""
    print("üöÄ SISTEMA DE AN√ÅLISE DE QUALIDADE PDI")
    print("=====================================")
    
    try:
        # Demonstra an√°lise de texto
        demo_text_analysis()
        
        # Demonstra an√°lise de CSV
        demo_csv_analysis()
        
        print("\n‚úÖ Demonstra√ß√£o conclu√≠da com sucesso!")
        print("\nüìö Para usar o sistema:")
        print("   1. Para an√°lise de texto: analyzer.analyze_text(objetivo, acoes)")
        print("   2. Para an√°lise de arquivo: analyzer.analyze_file(caminho_arquivo)")
        
    except Exception as e:
        print(f"\n‚ùå Erro durante a demonstra√ß√£o: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()
